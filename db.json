{
    "questions": [
        {
            "questionType" : "true_false",
            "questionText" : "Python uses curly-brackets to define scope.",
            "options" : ["True", "False"],
            "correctAnswer" : "False",
            "explanation" : "Python relies on indentation and whitespace to define scope, unlike other programming languages that often use curly brackets."
        },
        {
            "questionType" : "multiple_choice",
            "questionText" : "What is the correct way to create a single-line comment in Python?",
            "options" : [
                "#",
                "//",
                "<!-- -->",
                "/*"
            ],
            "correctAnswer" : "#",
            "explanation" : "Python utilizes the # symbol to create a single-line comment."
        },
        {
            "questionType" : "text_input",
            "questionText" : "Write the correct statement to print \"Hello!\" in Python",
            "correctAnswer" : "print(\"Hello!\")",
            "explanation" : "The print() method call is used to print in Python and there are no trailing semi-colons."
        },
        {
            "questionType" : "multiple_choice",
            "questionText" : "Which of the following is NOT a legal variable name in Python?",
            "options" : [
                "first_name",
                "_firstname",
                "first-name",
                "FIRSTNAME"
            ],
            "correctAnswer" : "first-name",
            "explanation" : "In Python variable names, only alpha-numeric characters and underscores are allowed (no hypens)."
        },
        {
            "questionType" : "fill_blank",
            "questionText" : "Complete the following Python code to cast 2.5 as an integer.",
            "displayText" : "___(2.5)",
            "correctAnswer" : "int",
            "explanation" : "The Python int() method can be used to return an int object from any number or string."
        },
        {
            "questionType" : "fix_error",
            "questionText" : "Fix this Python code to print the second character of the string 'Hello':",
            "displayText" : "print('Hello'[])",
            "correctAnswer" : "print('Hello'[1])",
            "explanation" : "Python strings can be iterated through using indexing. Since the first character has an index of 0, you would use [1] to grab the second character."
        },
        {
            "questionType" : "multiple_choice",
            "questionText" : "Which of the following is NOT an example of a Python data-type?",
            "options" : [
                "str",
                "int",
                "complex",
                "double"
            ],
            "correctAnswer" : "double",
            "explanation" : "In Python, decimal numbers have a data type of 'float' not 'double'."
        },
        {
            "questionType" : "true_false",
            "questionText" : "The Python statement print(14/3) will display 4.",
            "options" : ["True","False"],
            "correctAnswer" : "False",
            "explanation" : "Python's / operator retains floating decimal values when dividing while // is used for floor division."
        },
        {
            "questionType" : "text_input",
            "questionText" : "Write Python code to print the number of elements in myList where myList = [1,2,3,4]",
            "correctAnswer" : "print(len(myList))",
            "explanation" : "The len() method in Python is used to find the number of elements in a list."
        },
        {
            "questionType" : "true_false",
            "questionText" : "A Tuple is a Python data type that is ordered and mutable.",
            "options" : ["True","False"],
            "correctAnswer" : "False",
            "explanation" : "A Python tuple is immutable meaning the elements stored within cannot be changed."
        },
        {
            "questionType" : "multiple_choice",
            "questionText" : "What Python data type is characterized as being unordered and immutable?",
            "options" : [
                "List",
                "Set",
                "Tuple",
                "Dictionary"
            ],
            "correctAnswer" : "Set",
            "explanation" : "The Set data type in Python is immutable like a tuple but differs in that it is also unordered (thus prohibiting the use of indexing)."
        },
        {
            "questionType" : "fill_blank",
            "questionText" : "Complete the following Python code to execute a for loop a total of 5 times:",
            "displayText" : "for i in range(1,_):",
            "correctAnswer" : "6",
            "explanation" : "Using the range(a,b) method with a for loop can be used to iterate on each number in the set of (a,b].\nCalling range(1,6) would iterate a total of five times; once each on the numbers in the set {1, 2, 3, 4, 5} (6 is excluded)."
        },
        {
            "questionType" : "text_input",
            "questionText" : "What Python method is used to collect/store user input?",
            "correctAnswer" : "input()",
            "explanation" : "A Python statement such as name=input(\"What is your name?\") will wait for a user input and store that in the 'name' variable."
        },
        {
            "questionType" : "true_false",
            "questionText" : "The Python foreach loop can be used to iterate on every element within a list.",
            "options" : ["True", "False"],
            "correctAnswer" : "False",
            "explanation" : "Python does not have a foreach loop but instead allows that functionality using a regular for loop such as 'for element in myList:'"
        },
        {
            "questionType" : "multiple_choice",
            "questionText" : "What is returned by the following Python statement: return (12<30)",
            "options" : [
                "False",
                "\"True\"",
                "True",
                "true"                
            ],
            "correctAnswer" : "True",
            "explanation" : "Since 12 is less than 30, the Python statement would return the boolean True (quotation marks are used to specify strings)."
        },
        {
            "questionType" : "fill_blank",
            "questionText" : "Complete the following python code to define a Python function named myFunc:",
            "displayText" : "___ myFunc():\n\tprint(\"Hello\")",
            "correctAnswer" : "def",
            "explanation" : "The def keyword in Python is used to define new functions."
        },
        {
            "questionType" : "text_input",
            "questionText" : "What Python statement is used to escape from a loop?",
            "correctAnswer" : "break",
            "explanation" : "The break keyword in Python is used to escape from loops."
        },
        {
            "questionType" : "true_false",
            "questionText" : "Using a break statement within a nested loop will escape out of the entire loop structure.",
            "options" : ["True","False"],
            "correctAnswer" : "False",
            "explanation" : "Using a break statement within a nested loop will only escape from the most immediate loop it was called in. It is possible to break out of an inner loop while remaining within the outer loop."
        },
        {
            "questionType" : "true_false",
            "questionText" : "The pass keyword in Python is used to stop the current iteration and continue with the next.",
            "options" : ["True","False"],
            "correctAnswer" : "False",
            "explanation" : "The pass keyword in Python essentially tells the program to 'do nothing'. The continue keyword would be used to stop the current iteration but carry on with the next."
        },
        {
            "questionType" : "text_input",
            "questionText" : "To change a globally defined variable 'x' within a new function, this line must be written before interacting with x:",
            "correctAnswer" : "global x",
            "explanation" : "The global keyword is used within Python functions to specify that the proceeding variable already exists in the global scope. Without this keyword, declaring/assigning a variable would create it in the function's local scope and not change the value of that in the global scope."
        }
    ]
}
